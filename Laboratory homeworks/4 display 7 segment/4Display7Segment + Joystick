
const int pinSW =A2; 
const int pinX = A0; 
const int pinY = A1; 


const int pinA = 12;
const int pinB = 8;
const int pinC = 5;
const int pinD = 3;
const int pinE = 2;
const int pinF = 11;
const int pinG = 6;
const int pinDP = 4;
const int pinD1 = 7;
const int pinD2 = 9;
const int pinD3 = 10;
const int pinD4 = 13;


const int segSize = 8;
const int noOfDisplays = 4;
const int noOfDigits = 10;

int dpState = LOW;
int swState = LOW;
int lastSwState = LOW;
int switchValue;
int xValue = 0;
int yValue = 0;

bool lockedOn=false;
bool joyMoved = false;
int disp = 0;
int digit = 0;
int minThreshold= 400;
int maxThreshold= 600;
int currentPosition=0;


unsigned long period=500;
unsigned long time_now=0;


int segments[segSize] = {
  pinA, pinB, pinC, pinD, pinE, pinF, pinG, pinDP
};

int digits[noOfDisplays] = {
  pinD1, pinD2, pinD3, pinD4
 };   

int numbers[noOfDisplays]={
  0, 0, 0, 0
};

byte digitMatrix[noOfDigits][segSize - 1] = {
// a  b  c  d  e  f  g
  {1, 1, 1, 1, 1, 1, 0}, // 0
  {0, 1, 1, 0, 0, 0, 0}, // 1
  {1, 1, 0, 1, 1, 0, 1}, // 2
  {1, 1, 1, 1, 0, 0, 1}, // 3
  {0, 1, 1, 0, 0, 1, 1}, // 4
  {1, 0, 1, 1, 0, 1, 1}, // 5
  {1, 0, 1, 1, 1, 1, 1}, // 6
  {1, 1, 1, 0, 0, 0, 0}, // 7
  {1, 1, 1, 1, 1, 1, 1}, // 8
  {1, 1, 1, 1, 0, 1, 1}  // 9
};

void displayNumber(byte digit, byte decimalPoint) {
  for (int i = 0; i < segSize - 1; i++) {
  digitalWrite(segments[i], digitMatrix[digit][i]);
  }

  // write the decimalPoint to DP pin
  digitalWrite(segments[segSize - 1], decimalPoint);
}

void showDigit(int num) {
  for (int i = 0; i < noOfDisplays; i++) {
  digitalWrite(digits[i], HIGH);
  }
  digitalWrite(digits[num], LOW);
}

void setup() {
  // initialize all the pins
  for (int i = 0; i < segSize; i++) {
  pinMode(segments[i], OUTPUT);
  }
  pinMode(pinSW, INPUT_PULLUP);

  for (int i = 0; i < noOfDisplays; i++)
  {
  pinMode(digits[i], OUTPUT);  
  }
  
  Serial.begin(9600);

  
}
void loop() {

  for(int i = 0; i < noOfDisplays; i++)
  {
      showDigit(i);
      displayNumber(numbers[i],LOW); 
       
  }
  //CYCLING PHASE:
 if(lockedOn==false){
 
  xValue=analogRead(pinX);
  if (xValue < minThreshold && joyMoved == false){
    if(currentPosition>0){
      currentPosition--;
    } else{
      currentPosition=3;
    }
    joyMoved=true;
  }
   if (xValue > maxThreshold && joyMoved == false){
    if(currentPosition<3){
      currentPosition++;
    } else{
      currentPosition=0;
    }
    joyMoved=true;
  }
  if (xValue >= minThreshold && xValue <= maxThreshold) {
  joyMoved = false;
  }
  showDigit(currentPosition);
  displayNumber(numbers[currentPosition],HIGH);
 }
if(lockedOn==true){
  yValue = analogRead(pinY);
  showDigit(currentPosition);
  displayNumber(numbers[currentPosition],dpState);
  if(millis() > time_now + period){
        time_now = millis();
       
       dpState=!dpState;
    }
  
  if (yValue < minThreshold && joyMoved == false) {
  if (numbers[currentPosition] > 0) {
      numbers[currentPosition]--;
  } else {
      numbers[currentPosition] = 9;
  }
  joyMoved = true;
  }


  if (yValue > maxThreshold && joyMoved == false) {
  if (numbers[currentPosition] < 9) {
      numbers[currentPosition]++;
  } else {
      numbers[currentPosition] = 0;
  }
  joyMoved = true;
  }

  if (yValue >= minThreshold && yValue <= maxThreshold) {
  joyMoved = false;
  }
}
  swState = digitalRead(pinSW);
  if (swState !=  lastSwState) {
  if (swState == LOW) {
      lockedOn = !lockedOn;
            
  }
  }
  lastSwState = swState;  
  //Serial.println(currentPosition);
  delay(10);
}
